<?php
session_start();
include 'config.php';

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
$conn = getConnection();

echo "<h2>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Foreign Key Constraint ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs</h2>";

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö foreign key constraint ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
$checkConstraintSQL = "
SELECT 
    tc.constraint_name, 
    tc.table_name, 
    kcu.column_name, 
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name 
FROM 
    information_schema.table_constraints AS tc 
    JOIN information_schema.key_column_usage AS kcu
      ON tc.constraint_name = kcu.constraint_name
      AND tc.table_schema = kcu.table_schema
    JOIN information_schema.constraint_column_usage AS ccu
      ON ccu.constraint_name = tc.constraint_name
      AND ccu.table_schema = tc.table_schema
WHERE tc.constraint_type = 'FOREIGN KEY' 
    AND tc.table_name='activity_logs'
    AND tc.table_schema='public';
";

$result = pg_query($conn, $checkConstraintSQL);
if ($result) {
    echo "<h3>Foreign Key Constraints ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</h3>";
    while ($row = pg_fetch_assoc($result)) {
        echo "<p>Constraint: " . $row['constraint_name'] . " - " . $row['column_name'] . " -> " . $row['foreign_table_name'] . "." . $row['foreign_column_name'] . "</p>";
    }
}

// ‡∏•‡∏ö foreign key constraint ‡πÄ‡∏î‡∏¥‡∏°
$dropConstraintSQL = "ALTER TABLE activity_logs DROP CONSTRAINT IF EXISTS fk_activity_user;";
$result = pg_query($conn, $dropConstraintSQL);
if ($result) {
    echo "<p style='color: green;'>‚úì ‡∏•‡∏ö foreign key constraint ‡πÄ‡∏î‡∏¥‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
} else {
    echo "<p style='color: orange;'>‚ö† ‡πÑ‡∏°‡πà‡∏û‡∏ö foreign key constraint ‡πÄ‡∏î‡∏¥‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß</p>";
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á foreign key constraint ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á users ‡πÅ‡∏•‡∏∞ customers
// ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å PostgreSQL ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö multiple foreign keys ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô
// ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á trigger function ‡πÅ‡∏ó‡∏ô

$createTriggerFunctionSQL = "
CREATE OR REPLACE FUNCTION validate_activity_logs_user_id()
RETURNS TRIGGER AS $$
BEGIN
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ user_id ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡∏´‡∏£‡∏∑‡∏≠ customers
    IF NEW.user_id IS NOT NULL THEN
        IF NOT EXISTS (
            SELECT 1 FROM users WHERE id = NEW.user_id
        ) AND NOT EXISTS (
            SELECT 1 FROM customers WHERE id = NEW.user_id
        ) THEN
            RAISE EXCEPTION 'user_id % does not exist in users or customers table', NEW.user_id;
        END IF;
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;
";

$result = pg_query($conn, $createTriggerFunctionSQL);
if ($result) {
    echo "<p style='color: green;'>‚úì ‡∏™‡∏£‡πâ‡∏≤‡∏á trigger function ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
} else {
    echo "<p style='color: red;'>‚úó ‡∏™‡∏£‡πâ‡∏≤‡∏á trigger function ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . pg_last_error($conn) . "</p>";
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á trigger
$createTriggerSQL = "
CREATE OR REPLACE TRIGGER tr_validate_activity_logs_user_id
    BEFORE INSERT OR UPDATE ON activity_logs
    FOR EACH ROW
    EXECUTE FUNCTION validate_activity_logs_user_id();
";

$result = pg_query($conn, $createTriggerSQL);
if ($result) {
    echo "<p style='color: green;'>‚úì ‡∏™‡∏£‡πâ‡∏≤‡∏á trigger ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
} else {
    echo "<p style='color: red;'>‚úó ‡∏™‡∏£‡πâ‡∏≤‡∏á trigger ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . pg_last_error($conn) . "</p>";
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
echo "<h3>‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô:</h3>";

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ customer_id
$testCustomerSQL = "SELECT id FROM customers LIMIT 1";
$testResult = pg_query($conn, $testCustomerSQL);
if ($testResult && pg_num_rows($testResult) > 0) {
    $customer = pg_fetch_assoc($testResult);
    $testInsertSQL = "INSERT INTO activity_logs (user_id, action, description, table_name) VALUES ($1, 'test', 'Test activity log', 'customers')";
    $testInsertResult = pg_query_params($conn, $testInsertSQL, [$customer['id']]);
    
    if ($testInsertResult) {
        echo "<p style='color: green;'>‚úì ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å activity log ‡∏î‡πâ‡∏ß‡∏¢ customer_id ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
        
        // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        $deleteTestSQL = "DELETE FROM activity_logs WHERE action = 'test'";
        pg_query($conn, $deleteTestSQL);
    } else {
        echo "<p style='color: red;'>‚úó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å activity log ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . pg_last_error($conn) . "</p>";
    }
} else {
    echo "<p style='color: orange;'>‚ö† ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö</p>";
}

pg_close($conn);

echo "<h3>‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Foreign Key Constraint ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!</h3>";
echo "<p><strong>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥:</strong></p>";
echo "<ul>";
echo "<li>‡∏•‡∏ö foreign key constraint ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</li>";
echo "<li>‡∏™‡∏£‡πâ‡∏≤‡∏á trigger function ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ user_id ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á users ‡∏´‡∏£‡∏∑‡∏≠ customers</li>";
echo "<li>‡∏™‡∏£‡πâ‡∏≤‡∏á trigger ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£ INSERT ‡∏´‡∏£‡∏∑‡∏≠ UPDATE ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs</li>";
echo "<li>‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</li>";
echo "</ul>";

echo "<p><strong>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</strong> ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á users (‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô) ‡πÅ‡∏•‡∏∞ customers (‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤) ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß</p>";
?>

<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Foreign Key Constraint</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        h2, h3 {
            color: #333;
            border-bottom: 2px solid #007bff;
            padding-bottom: 10px;
        }
        p {
            margin: 10px 0;
            padding: 8px;
            border-radius: 4px;
        }
        ul {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        li {
            margin: 10px 0;
        }
        .success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .warning {
            background-color: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
    </style>
</head>
<body>
    <div style="background-color: white; padding: 30px; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
        <h1 style="text-align: center; color: #007bff;">üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Foreign Key Constraint</h1>
        
        <div style="margin-top: 30px;">
            <h3>üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á</h3>
            <ul>
                <li><a href="user-login.php">üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</a></li>
                <li><a href="user-register.php">üìù ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</a></li>
                <li><a href="admin-dashboard.php">üìä Admin Dashboard</a></li>
                <li><a href="index.php">üè† ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</a></li>
            </ul>
        </div>
    </div>
</body>
</html>
