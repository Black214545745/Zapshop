<?php
/**
 * ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
 * ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö LINE Notify, Email, ‡πÅ‡∏•‡∏∞ SMS
 */

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ CORS headers
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: POST, GET');
header('Access-Control-Allow-Headers: Content-Type, Authorization');
header('Content-Type: application/json');

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á LINE Notify
function sendLineNotify($message, $token = null) {
    if (!$token) {
        $token = 'YOUR_LINE_NOTIFY_TOKEN'; // ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö LINE Notify
    }
    
    $url = 'https://notify-api.line.me/api/notify';
    $data = [
        'message' => $message
    ];
    
    $headers = [
        'Authorization: Bearer ' . $token,
        'Content-Type: application/x-www-form-urlencoded'
    ];
    
    try {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        
        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        $error = curl_error($ch);
        
        curl_close($ch);
        
        if ($error) {
            return [
                'success' => false,
                'error' => 'cURL Error: ' . $error
            ];
        }
        
        if ($httpCode === 200) {
            return [
                'success' => true,
                'message' => '‡∏™‡πà‡∏á LINE Notify ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
                'response' => $response
            ];
        } else {
            return [
                'success' => false,
                'error' => 'HTTP Error: ' . $httpCode,
                'response' => $response
            ];
        }
    } catch (Exception $e) {
        return [
            'success' => false,
            'error' => 'Exception: ' . $e->getMessage()
        ];
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Email
function sendEmail($to, $subject, $message, $from = null) {
    if (!$from) {
        $from = 'noreply@zapshop.com';
    }
    
    $headers = [
        'From: ' . $from,
        'Reply-To: ' . $from,
        'Content-Type: text/html; charset=UTF-8',
        'X-Mailer: PHP/' . phpversion()
    ];
    
    try {
        $result = mail($to, $subject, $message, implode("\r\n", $headers));
        
        if ($result) {
            return [
                'success' => true,
                'message' => '‡∏™‡πà‡∏á Email ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
            ];
        } else {
            return [
                'success' => false,
                'error' => '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á Email ‡πÑ‡∏î‡πâ'
            ];
        }
    } catch (Exception $e) {
        return [
            'success' => false,
            'error' => 'Exception: ' . $e->getMessage()
        ];
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á SMS (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
function sendSMS($phone, $message) {
    // ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ SMS Gateway ‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏ä‡πà‡∏ô Twilio, Nexmo
    // ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á
    
    try {
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log
        $logFile = 'logs/sms.log';
        $logDir = dirname($logFile);
        
        if (!is_dir($logDir)) {
            mkdir($logDir, 0755, true);
        }
        
        $timestamp = date('Y-m-d H:i:s');
        $logEntry = "[{$timestamp}] SMS to {$phone}: {$message}\n";
        
        file_put_contents($logFile, $logEntry, FILE_APPEND | LOCK_EX);
        
        return [
            'success' => true,
            'message' => '‡∏™‡πà‡∏á SMS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡∏à‡∏≥‡∏•‡∏≠‡∏á)',
            'phone' => $phone,
            'message' => $message
        ];
    } catch (Exception $e) {
        return [
            'success' => false,
            'error' => 'Exception: ' . $e->getMessage()
        ];
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
function createNotificationMessage($type, $data) {
    switch ($type) {
        case 'payment_success':
            return "‚úÖ ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\n" .
                   "üÜî Order ID: {$data['order_id']}\n" .
                   "üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏ø" . number_format($data['amount'], 2) . "\n" .
                   "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: " . date('d/m/Y H:i', strtotime($data['paid_at'])) . "\n" .
                   "üéâ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ZapShop!";
            
        case 'payment_failed':
            return "‚ùå ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!\n\n" .
                   "üÜî Order ID: {$data['order_id']}\n" .
                   "üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏ø" . number_format($data['amount'], 2) . "\n" .
                   "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: " . date('d/m/Y H:i') . "\n" .
                   "üîß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á";
            
        case 'payment_pending':
            return "‚è≥ ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô!\n\n" .
                   "üÜî Order ID: {$data['order_id']}\n" .
                   "üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ‡∏ø" . number_format($data['amount'], 2) . "\n" .
                   "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: " . date('d/m/Y H:i') . "\n" .
                   "‚è∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ";
            
        default:
            return "üì¢ ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å ZapShop\n\n" . $data['message'];
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
function sendNotification($userId, $type, $data, $methods = ['line', 'email']) {
    $results = [];
    $message = createNotificationMessage($type, $data);
    
    // ‡∏™‡πà‡∏á LINE Notify
    if (in_array('line', $methods)) {
        $lineResult = sendLineNotify($message);
        $results['line'] = $lineResult;
    }
    
    // ‡∏™‡πà‡∏á Email
    if (in_array('email', $methods)) {
        // ‡∏´‡∏≤ email ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
        $userEmail = 'user@example.com'; // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        
        $emailResult = sendEmail(
            $userEmail,
            '‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å ZapShop',
            nl2br($message)
        );
        $results['email'] = $emailResult;
    }
    
    // ‡∏™‡πà‡∏á SMS
    if (in_array('sms', $methods)) {
        // ‡∏´‡∏≤‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
        $userPhone = '0812345678'; // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
        
        $smsResult = sendSMS($userPhone, $message);
        $results['sms'] = $smsResult;
    }
    
    return $results;
}

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $input = file_get_contents('php://input');
    $data = json_decode($input, true);
    
    if ($data) {
        $userId = $data['user_id'] ?? '';
        $type = $data['type'] ?? '';
        $notificationData = $data['data'] ?? [];
        $methods = $data['methods'] ?? ['line', 'email'];
        
        if (!$userId || !$type) {
            http_response_code(400);
            echo json_encode([
                'success' => false,
                'error' => 'Missing required fields'
            ]);
            exit;
        }
        
        $results = sendNotification($userId, $type, $notificationData, $methods);
        
        echo json_encode([
            'success' => true,
            'message' => '‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            'results' => $results
        ]);
    } else {
        http_response_code(400);
        echo json_encode([
            'success' => false,
            'error' => 'Invalid JSON data'
        ]);
    }
} else {
    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    ?>
    <!DOCTYPE html>
    <html lang="th">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô - ZapShop</title>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body>
        <div class="container mt-5">
            <h1><i class="fas fa-bell me-2"></i>‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h1>
            
            <div class="alert alert-info">
                <h4><i class="fas fa-info-circle me-2"></i>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h4>
                <p>‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô LINE Notify, Email, ‡πÅ‡∏•‡∏∞ SMS</p>
            </div>
            
            <div class="card mb-4">
                <div class="card-header">
                    <h3><i class="fas fa-flask me-2"></i>‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h3>
                </div>
                <div class="card-body">
                    <form id="notificationForm">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="userId" class="form-label">User ID</label>
                                    <input type="text" class="form-control" id="userId" value="USER001" required>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="type" class="form-label">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</label>
                                    <select class="form-select" id="type" required>
                                        <option value="payment_success">‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</option>
                                        <option value="payment_failed">‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß</option>
                                        <option value="payment_pending">‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</option>
                                    </select>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="orderId" class="form-label">Order ID</label>
                                    <input type="text" class="form-control" id="orderId" value="ORD001" required>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="amount" class="form-label">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</label>
                                    <input type="number" class="form-control" id="amount" value="1000" step="0.01" required>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="paidAt" class="form-label">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</label>
                                    <input type="datetime-local" class="form-control" id="paidAt" required>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label">‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</label>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="lineNotify" checked>
                                        <label class="form-check-label" for="lineNotify">LINE Notify</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="emailNotify" checked>
                                        <label class="form-check-label" for="emailNotify">Email</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="smsNotify">
                                        <label class="form-check-label" for="smsNotify">SMS</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane me-2"></i>‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                        </button>
                    </form>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header">
                    <h3><i class="fas fa-list me-2"></i>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>
                </div>
                <div class="card-body">
                    <div id="testResults">
                        <p class="text-muted">‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏î‡∏™‡∏≠‡∏ö</p>
                    </div>
                </div>
            </div>
            
            <hr>
            <p><a href="payment_gateway_dashboard.php" class="btn btn-secondary">‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ Payment Gateway Dashboard</a></p>
        </div>
        
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
        <script>
            // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            document.getElementById('paidAt').value = new Date().toISOString().slice(0, 16);
            
            // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
            document.getElementById('notificationForm').addEventListener('submit', function(e) {
                e.preventDefault();
                
                const methods = [];
                if (document.getElementById('lineNotify').checked) methods.push('line');
                if (document.getElementById('emailNotify').checked) methods.push('email');
                if (document.getElementById('smsNotify').checked) methods.push('sms');
                
                const testData = {
                    user_id: document.getElementById('userId').value,
                    type: document.getElementById('type').value,
                    data: {
                        order_id: document.getElementById('orderId').value,
                        amount: parseFloat(document.getElementById('amount').value),
                        paid_at: document.getElementById('paidAt').value
                    },
                    methods: methods
                };
                
                // ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                fetch(window.location.href, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(testData)
                })
                .then(response => response.json())
                .then(data => {
                    displayResults(data);
                })
                .catch(error => {
                    displayResults({
                        success: false,
                        error: error.message
                    });
                });
            });
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            function displayResults(data) {
                const resultsDiv = document.getElementById('testResults');
                
                if (data.success) {
                    let html = '<div class="alert alert-success">';
                    html += '<h5><i class="fas fa-check-circle me-2"></i>‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h5>';
                    html += '<p><strong>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:</strong> ' + data.message + '</p>';
                    
                    if (data.results) {
                        html += '<h6>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:</h6>';
                        html += '<ul>';
                        for (const [method, result] of Object.entries(data.results)) {
                            const status = result.success ? '‚úÖ' : '‚ùå';
                            const message = result.success ? result.message : result.error;
                            html += `<li><strong>${method.toUpperCase()}:</strong> ${status} ${message}</li>`;
                        }
                        html += '</ul>';
                    }
                    
                    html += '</div>';
                    resultsDiv.innerHTML = html;
                } else {
                    resultsDiv.innerHTML = `
                        <div class="alert alert-danger">
                            <h5><i class="fas fa-exclamation-triangle me-2"></i>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!</h5>
                            <p><strong>‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:</strong> ${data.error}</p>
                        </div>
                    `;
                }
            }
        </script>
    </body>
    </html>
    <?php
}
?>
